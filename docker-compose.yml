version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: duckconnect-postgres
    environment:
      POSTGRES_USER: duckconnect
      POSTGRES_PASSWORD: duckconnect123
      POSTGRES_DB: duckconnect
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U duckconnect"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: duckconnect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: duckconnect-minio
    environment:
      MINIO_ACCESS_KEY: duckconnect
      MINIO_SECRET_KEY: duckconnect123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: duckconnect-api
    environment:
      DATABASE_URL: postgresql://duckconnect:duckconnect123@postgres:5432/duckconnect
      REDIS_URL: redis://redis:6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: duckconnect
      MINIO_SECRET_KEY: duckconnect123
      JWT_SECRET: your-jwt-secret-here
      NODE_ENV: development
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
  minio_data:
